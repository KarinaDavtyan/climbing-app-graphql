{"version":3,"file":"main.js","sources":["webpack:///webpack/bootstrap","webpack:///./src/db/index.js","webpack:///./src/graphQL/resolvers/index.js","webpack:///./src/graphQL/types/index.graphql","webpack:///./src/helpers/index.js","webpack:///./src/index.js","webpack:///external \"apollo-server-koa\"","webpack:///external \"dotenv\"","webpack:///external \"graphql-import\"","webpack:///external \"koa\"","webpack:///external \"mongodb\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n"," require('dotenv').config()\nconst { idToString } = require('../helpers');\nconst { MongoClient } = require('mongodb');\n\nconst url = process.env.MONGO_LOCAL_DB;\nconst dbName = process.env.DB_NAME;\n\nconst postRoute = async ({ data }) => {\n  let client;\n  try {\n    client = await MongoClient.connect(url, { useNewUrlParser: true });\n    const db = client.db(dbName);\n    const routes = db.collection('routes');\n\n    const { _id, title, location } = data;\n\n    const route = routes.insert({\n      title\n    })\n    return route;\n  } catch (err) {\n    //eslint-disable-next-line\n    console.log(err.stack);\n  }\n  client.close();\n}\n\nconst getRoutes = async () => {\n  let client;\n  try {\n    client = await MongoClient.connect(url, { useNewUrlParser: true });\n    const db = client.db(dbName);\n    const routes = db.collection('routes');\n\n    const routesArray = await routes.find().limit(10).toArray();\n    const routesWithStrID = routesArray.map(idToString);\n    return routesWithStrID;\n  } catch (err) {\n    //eslint-disable-next-line\n    console.log(err.stack);\n  }\n  client.close();\n}\n\n\n\nmodule.exports = {\n  postRoute,\n  getRoutes\n}\n","import db from '../../db';\n\nconst resolvers = {\n  Query: {\n    route:()=> {\n      return {\n        title: 'title'\n      }\n    },\n    routes: async () => {\n      const routes = await db.getRoutes();\n      return routes\n    }\n  },\n  Mutation: {\n    postRoute: async (root, args) => {\n      const data = {\n        title: args.title\n      }\n      await db.postRoute({ data })\n      return {\n        data\n      }\n    }\n  }\n}\n\nexport default resolvers;\n","module.exports = \"type Query {\\n  route: Route\\n  routes: [Route]\\n}\\n\\ntype Mutation {\\n  postRoute(title: String!): Route\\n}\\n\\ntype Route {\\n  _id: ID\\n  title: String\\n}\\n\"","export const idToString = (doc) => {\n  doc._id = doc._id.toString()\n  return doc;\n}\n","require('dotenv').config()\n\nimport Koa from 'koa';\nimport { ApolloServer } from 'apollo-server-koa';\nimport { importSchema } from 'graphql-import'\n\nimport typeDefs from './graphQL/types/index.graphql';\nimport resolvers from './graphQL/resolvers/index.js';\n\nconst app = new Koa();\nconst server = new ApolloServer({ typeDefs, resolvers });\nconst port = 4000;\n\nserver.applyMiddleware({ app });\n\napp.listen({ port }, () =>\n  console.log(`ðŸš€ Server ready at http://localhost:4000${server.graphqlPath}`),\n);\n","module.exports = require(\"apollo-server-koa\");","module.exports = require(\"dotenv\");","module.exports = require(\"graphql-import\");","module.exports = require(\"koa\");","module.exports = require(\"mongodb\");"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjDA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3BA;;;;;;;;;;;;ACAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}